{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "statim",
	"fileTypes": [
		"stm"
	],
	"scopeName": "source.stm",
	"patterns": [
		{ "include": "#translation_unit" }
    ],
    "repository": {
        "translation_unit": {
			"patterns": [
				{ "include": "#runes" },
				{ "include": "#use" },
				{ "include": "#cast" },
				{ "include": "#function" },
				{ "include": "#struct" },
				{ "include": "#enum" },
				{ "include": "#keywords" },
				{ "include": "#comments" },
				{ "include": "#constants" },
				{ "include": "#storage" },
				{ "include": "#operators" },
				{ "include": "#variables" },
				{ "include": "#types" }
			]
        },

		"runes": {
			"patterns": [
				{
					"name": "meta.rune.list.statim",
					"begin": "(\\$)\\[",
					"end": "\\]",
					"beginCaptures": {
						"0": { "name": "meta.rune.list.statim" },
						"1": { "name": "keyword.other.rune.statim" }
					},
					"endCaptures": {
						"0": { "name": "meta.rune.list.statim" }
					},
					"patterns": [
						{
							"name": "meta.decl.rune.statim",
							"match": "\\b(abi|alignas|deprecated|dump|inline|intrinsic|no_discard|no_opt|no_return|no_scope|packed|public|private|unsafe)",
							"captures": {
								"1": { "name": "entity.name.tag.rune.statim" }
							}
						}
					]
				}
			]
		},

		"use": {
			"name": "meta.use.statim",
			"begin": "\\b(use)\\b",
			"beginCaptures": {
				"1": { "name": "keyword.other.use.statim" }
			},
			"end": ";",
			"patterns": [
				{
					"name": "meta.use.direct.statim",
					"match": "\\\"[^\\\"]+\\\"",
					"captures": {
						"0": { "name": "string.quoted.filename.statim" }
					}
				}
			]
		},

        "cast": {
            "match": "\\b(cast)\\s*\\<(?:\\*|\\^)*(.+?)\\>",
            "captures": {
				"1": { "name": "keyword.other.cast.statim" },
				"2": { "name": "storage.type.statim" }
            }
        },
		
		"function": {
			"patterns": [
				{ "include": "#function_decl" },
				{ "include": "#function_use" }
			]
		},

		"function_decl": {
			"match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b\\s*(::)\\s*[\\(]",
			"captures": {
				"1": { "name": "meta.function.statim entity.name.function.statim" },
				"2": { "name": "keyword.operator.colon.statim" }
			}
		},

		"function_use": {
			"match": "(?!(until|if|ret)\\s+)([a-zA-Z_]\\w*)\\s*[\\(]",
			"captures": {
				"2": { "name": "entity.name.function.statim" }
			}
		},

		"struct": {
			"begin": "\\b(\\w*)\\b\\s*(::)\\s*\\{",
			"beginCaptures": {
				"1": { "name": "support.type.struct.statim entity.name.type.struct.statim" },
				"2": { "name": "keyword.operator.colon.statim" }
			},
			"end": "\\}",
			"patterns": [
				{
					"name": "meta.struct.access.modifier.statim",
					"match": "\\b(public|private)(:)",
					"captures": {
						"1": { "name": "keyword.control.access.modifier.statim" },
						"2": { "name": "keyword.operator.colon.statim" }
					}
				},
				{
					"include": "#comments"
				},
				{
					"include": "#types"
				}
			]
		},

		"enum": {
			"begin": "\\b(\\w*)\\b\\s*(::)\\s*(s8|s16|s32|s64|u8|u16|u32|u64|bool)\\s*\\{",
			"beginCaptures": {
				"1": { "name": "support.type.enum.statim entity.name.type.enum.statim" },
				"2": { "name": "keyword.operator.colon.statim" },
				"3": { "name": "storage.type.statim" }
			},
			"end": "\\}",
			"patterns": [
				{
					"name": "meta.enum.variant.statim",
					"match": "\\b([A-Za-z_][A-Za-z0-9_]*)\\b(\\s*=\\s*([^,\\s]+))?",
					"captures": {
						"1": { "name": "constant.other.enum.variant.statim" },
						"2": { "name": "keyword.operator.assignment.equal.statim" },
						"3": { "name": "constant.numeric.integer.statim" }
					}
				},
				{ "include": "#comments" }
			]
		},

		"keywords": {
			"patterns": [
				{
					"name": "keyword.other.rune.statim",
					"match": "\\$\\w*"
				},
				{
					"name": "keyword.control.statim",
					"match": "\\b(?:if|defer|else|while|ret|match|break|continue)\\b"
				},
				{
					"name": "entity.name.function.sizeof.statim",
					"match": "\\b(?:sizeof)\\b"
				}
			]
		},

		"comments": {
			"patterns": [
				{ "include": "#line-comment" },
				{ "include": "#block-comment" }
			]
		},

		"line-comment": {
			"name": "comment.line.statim",
			"begin": "//",
			"end": "$"
		},

		"block-comment": {
			"name": "comment.block.statim",
			"begin": "/\\*",
			"end": "\\*/",
			"patterns": [
				{ "include": "#block-comment" }
			]
		},

		"constants": {
			"patterns": [
				{
					"name": "constant.language.statim",
					"match": "\\b(true|false|null)\\b"
				},
				{
					"name": "constant.numeric.decimal.statim",
					"match": "(?<!\\w)\\d+(?:\\.\\d+)?"
				}
			]
		},

		"escapes": {
			"patterns": [
				{
					"name": "constant.character.escape.statim",
      				"match": "(\\\\)(?:(?:[0-7]{1,3})|(x[\\da-fA-F]{2})|(u(\\{)[\\da-fA-F]{4,6}(\\}))|.)",					
					"captures": {
						"1": { "name": "constant.character.escape.backslash.statim" },
						"2": { "name": "constant.character.escape.bit.statim" },
						"3": { "name": "constant.character.escape.unicode.statim" },
						"4": { "name": "constant.character.escape.unicode.punctuation.statim" },
						"5": { "name": "constant.character.escape.unicode.punctuation.statim" }
					}
				}
			]
		},

		"storage": {
			"patterns": [
				{
					"name": "storage.modifier.statim",
					"match": "\\b(?:let)\\b"
				},
				{
					"name": "storage.type.statim",
					"match": "\\b(?:void|char|bool|u8|u16|u32|u64|s8|s16|s32|s64|f32|f64)\\b"
				},
				{
					"name": "storage.constant.statim",
					"match": "\\b[A-Z_](?![a-z])[A-Z0-9]+\\b"
				},
				{
					"name": "string.quoted.single.statim",
					"begin": "'",
					"end": "'",
					"patterns": [
						{ "include": "#escapes" }
					]
				},
				{
					"name": "string.quoted.double.statim",
					"begin": "\"",
					"end": "\"",
					"patterns": [
						{ "include": "#escapes" }
					]
				}
			]
		},

		"operators": {
			"patterns": [
				{
                    "name": "keyword.operator.logical.statim",
                    "match": "(\\^|\\||\\|\\||&|&&|<<|>>|!)(?!=)"
                },
				{
                    "name": "keyword.operator.assignment.statim",
                    "match": "(\\+=|-=|\\*=|/=|%=|\\^=|&=|\\|=|<<=|>>=)"
                },
				{
                    "name": "keyword.operator.assignment.equal.statim",
                    "match": "(?<![<>])=(?!=|>)"
                },
                {
                    "name": "keyword.operator.comparison.statim",
                    "match": "(=(=)?(?!>)|!=|<=|(?<!=)>=|<|>|<>)"
                },
                {
                    "name": "keyword.operator.math.statim",
                    "match": "(([+%]|(\\*(?!\\w)))(?!=))|(-(?!>))|(/(?!/))"
                },
				{
                    "name": "keyword.operator.namespace.statim",
                    "match": "::"
                },
                {
                    "name": "keyword.operator.access.dot.statim",
                    "match": "\\.(?!\\.)"
                },
                {
                    "name": "keyword.operator.arrow.skinny.statim",
                    "match": "->"
                },
                {
                    "name": "keyword.operator.arrow.fat.statim",
                    "match": "=>"
                }
			]
		},

		"variables": {
			"patterns": [
				{
					"name": "variable.other.statim",
					"match": "\\b[a-z_][A-Za-z0-9_]*\\b"
				}
			]
		},

		"types": {
			"patterns": [
				{
					"name": "support.type.builtin.statim",
					"match": "(\\*)*\\b(?:bool|char|u8|u16|u32|u64|s8|s16|s32|s64|f32|f64)\\b",
					"captures": {
						"1": {
							"name": "storage.modifier.pointer.statim"
						}
					}
				},
				{
					"name": "support.type.custom.statim",
					"match": "(\\*+)?\\b[A-Z][A-Za-z0-9_]*\\b",
					"captures": {
						"1": {
							"name": "storage.modifier.pointer.statim"
						}
					}
				}
			]
		}
    }
}
